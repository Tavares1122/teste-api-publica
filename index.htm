<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JSONPlaceholder API - Posts</title>
    <link rel="stylesheet" href="estilo/style.css">
</head>
<body>
    <h1>Posts</h1>
    <div id="posts-container"></div>

    <!-- Modal -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <span id="close-modal" class="close">&times;</span>
            <div id="post-details"></div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const postsContainer = document.getElementById('posts-container');
            const modal = document.getElementById('modal');
            const closeModal = document.getElementById('close-modal');
            const postDetails = document.getElementById('post-details');

            // Fetch posts from API
            fetch('https://jsonplaceholder.typicode.com/posts')
                .then(response => response.json())
                .then(posts => {
                    posts.forEach(post => {
                        const postCard = document.createElement('div');
                        postCard.className = 'post-card';
                        postCard.innerHTML = `
                            <h2>${post.title}</h2>
                            <p>ID: ${post.id}</p>
                            <button onclick="viewDetails(${post.id})">View</button>
                            <button onclick="deletePost(${post.id}, this)">Delete</button>
                        `;
                        postsContainer.appendChild(postCard);
                    });
                });

            // View details
            window.viewDetails = (postId) => {
                fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)
                    .then(response => response.json())
                    .then(post => {
                        postDetails.innerHTML = `
                            <h2>${post.title}</h2>
                            <p><strong>ID:</strong> ${post.id}</p>
                            <p><strong>User ID:</strong> ${post.userId}</p>
                            <p><strong>Body:</strong> ${post.body}</p>
                        `;
                        modal.style.display = 'block';
                    });
            };

            // Delete post
            window.deletePost = (postId, button) => {
                fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        button.parentElement.remove();
                    } else {
                        alert('Error deleting post');
                    }
                });
            };

            // Close modal
            closeModal.onclick = () => {
                modal.style.display = 'none';
            };

            window.onclick = (event) => {
                if (event.target == modal) {
                    modal.style.display = 'none';
                }
            };
        });
    </script>
</body>
</html>